{"ast":null,"code":"var _jsxFileName = \"/home/minale/trial/aahdc-lottery-platform-v1/frontend/src/components/DeveloperSubmissionForm.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/DeveloperSubmissionForm.js\nimport React, { useState } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { submitUnits } from \"../services/unitService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst unitTypologies = [\"Studio\", \"1BR\", \"2BR\", \"3BR\", \"Shop\"];\nfunction DeveloperSubmissionForm() {\n  _s();\n  const [units, setUnits] = useState([{\n    unitId: \"\",\n    typology: \"\",\n    netArea: \"\",\n    grossArea: \"\",\n    floorNumber: \"\",\n    blockName: \"\",\n    totalBuildingGrossArea: \"\"\n  }]);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [selectedFileName, setSelectedFileName] = useState(\"\");\n  const handleExcelUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setSelectedFileName(file.name);\n    const reader = new FileReader();\n    reader.onload = evt => {\n      const data = evt.target.result;\n      const workbook = XLSX.read(data, {\n        type: \"binary\"\n      });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, {\n        defval: \"\"\n      });\n      const parsedUnits = jsonData.map(row => ({\n        unitId: row[\"Unit ID\"] || \"\",\n        typology: row[\"Typology\"] || \"\",\n        netArea: row[\"Net Area\"] || \"\",\n        grossArea: row[\"Gross Area\"] || \"\",\n        floorNumber: row[\"Floor Number\"] || \"\",\n        blockName: row[\"Block Name\"] || \"\",\n        totalBuildingGrossArea: row[\"Total Building Gross Area\"] || \"\"\n      }));\n      setUnits(parsedUnits);\n      setMessage(`Loaded ${parsedUnits.length} units from Excel file.`);\n      setError(\"\");\n    };\n    reader.readAsBinaryString(file);\n  };\n  const handleUnitChange = (index, event) => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newUnits = [...units];\n    newUnits[index][name] = value;\n\n    // Auto-fill totalBuildingGrossArea if it's the first unit in a new block\n    if (name === \"blockName\" && value && !newUnits[index].totalBuildingGrossArea) {\n      const existingBlockUnits = newUnits.filter((u, i) => i !== index && u.blockName === value);\n      if (existingBlockUnits.length > 0) {\n        newUnits[index].totalBuildingGrossArea = existingBlockUnits[0].totalBuildingGrossArea;\n      }\n    }\n    setUnits(newUnits);\n  };\n  const addUnit = () => {\n    const lastUnit = units[units.length - 1];\n    const newUnit = {\n      unitId: \"\",\n      typology: \"\",\n      netArea: \"\",\n      grossArea: \"\",\n      floorNumber: \"\",\n      blockName: lastUnit ? lastUnit.blockName : \"\",\n      totalBuildingGrossArea: lastUnit ? lastUnit.totalBuildingGrossArea : \"\"\n    };\n    setUnits([...units, newUnit]);\n  };\n  const removeUnit = index => {\n    const newUnits = units.filter((_, i) => i !== index);\n    setUnits(newUnits);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setMessage(\"\");\n    setError(\"\");\n    setLoading(true);\n    try {\n      // Basic client-side validation for empty fields\n      for (const unit of units) {\n        for (const key in unit) {\n          if (!unit[key]) {\n            setError(`Please fill all fields for Unit ID: ${unit.unitId || \"New Unit\"}.`);\n            setLoading(false);\n            return;\n          }\n        }\n      }\n\n      // Convert area and floor numbers to numbers, and ensure allocated: false\n      const unitsToSend = units.map(unit => ({\n        ...unit,\n        netArea: parseFloat(unit.netArea),\n        grossArea: parseFloat(unit.grossArea),\n        floorNumber: parseInt(unit.floorNumber, 10),\n        totalBuildingGrossArea: parseFloat(unit.totalBuildingGrossArea),\n        allocated: false\n      }));\n      const response = await submitUnits(unitsToSend);\n      setMessage(response.message);\n      setError(\"\");\n      setUnits([{\n        unitId: \"\",\n        typology: \"\",\n        netArea: \"\",\n        grossArea: \"\",\n        floorNumber: \"\",\n        blockName: \"\",\n        totalBuildingGrossArea: \"\"\n      }]); // Clear form\n    } catch (err) {\n      setError(err.message || \"An unexpected error occurred.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Developer Unit Submission\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message-success\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"tip\",\n      children: \"Submitting units...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-title\",\n          children: \"Batch Upload (Excel)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-subtitle\",\n          children: \"Use the template headers: Unit ID, Typology, Net Area, Gross Area, Floor Number, Block Name, Total Building Gross Area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"btn btn-secondary\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".xlsx, .xls\",\n            onChange: handleExcelUpload,\n            disabled: loading,\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn-icon\",\n            children: \"\\uD83D\\uDCE4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), \" Import File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), selectedFileName && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tip\",\n      children: [\"Selected: \", selectedFileName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [units.map((unit, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unit-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Unit \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Unit ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"unitId\",\n              value: unit.unitId,\n              onChange: e => handleUnitChange(index, e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Typology\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"typology\",\n              value: unit.typology,\n              onChange: e => handleUnitChange(index, e),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Typology\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), unitTypologies.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: type,\n                children: type\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Net Area (sqm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              name: \"netArea\",\n              value: unit.netArea,\n              onChange: e => handleUnitChange(index, e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Gross Area (sqm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              name: \"grossArea\",\n              value: unit.grossArea,\n              onChange: e => handleUnitChange(index, e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Floor Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"floorNumber\",\n              value: unit.floorNumber,\n              onChange: e => handleUnitChange(index, e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Block/Building Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"blockName\",\n              value: unit.blockName,\n              onChange: e => handleUnitChange(index, e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            style: {\n              gridColumn: \"span 2\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Total Gross Area of Building (for this block)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              name: \"totalBuildingGrossArea\",\n              value: unit.totalBuildingGrossArea,\n              onChange: e => handleUnitChange(index, e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), units.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          onClick: () => removeUnit(index),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn-icon\",\n            children: \"\\uD83D\\uDDD1\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this), \" Remove Unit\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          gap: 12,\n          marginTop: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-outline\",\n          onClick: addUnit,\n          disabled: loading,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn-icon\",\n            children: \"\\u2795\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), \" Add Another Unit\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: loading,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn-icon\",\n            children: \"\\uD83D\\uDCE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), \" Submit All Units\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(DeveloperSubmissionForm, \"Ujz1KbNVjopGa2y9xvuZEAbLEYU=\");\n_c = DeveloperSubmissionForm;\nexport default DeveloperSubmissionForm;\nvar _c;\n$RefreshReg$(_c, \"DeveloperSubmissionForm\");","map":{"version":3,"names":["React","useState","XLSX","submitUnits","jsxDEV","_jsxDEV","unitTypologies","DeveloperSubmissionForm","_s","units","setUnits","unitId","typology","netArea","grossArea","floorNumber","blockName","totalBuildingGrossArea","message","setMessage","error","setError","loading","setLoading","selectedFileName","setSelectedFileName","handleExcelUpload","event","file","target","files","name","reader","FileReader","onload","evt","data","result","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","defval","parsedUnits","map","row","length","readAsBinaryString","handleUnitChange","index","value","newUnits","existingBlockUnits","filter","u","i","addUnit","lastUnit","newUnit","removeUnit","_","handleSubmit","preventDefault","unit","key","unitsToSend","parseFloat","parseInt","allocated","response","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","disabled","style","display","onSubmit","e","required","step","gridColumn","onClick","justifyContent","gap","marginTop","_c","$RefreshReg$"],"sources":["/home/minale/trial/aahdc-lottery-platform-v1/frontend/src/components/DeveloperSubmissionForm.js"],"sourcesContent":["// frontend/src/components/DeveloperSubmissionForm.js\nimport React, { useState } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { submitUnits } from \"../services/unitService\";\n\nconst unitTypologies = [\"Studio\", \"1BR\", \"2BR\", \"3BR\", \"Shop\"];\n\nfunction DeveloperSubmissionForm() {\n  const [units, setUnits] = useState([\n    {\n      unitId: \"\",\n      typology: \"\",\n      netArea: \"\",\n      grossArea: \"\",\n      floorNumber: \"\",\n      blockName: \"\",\n      totalBuildingGrossArea: \"\",\n    },\n  ]);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [selectedFileName, setSelectedFileName] = useState(\"\");\n\n  const handleExcelUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setSelectedFileName(file.name);\n\n    const reader = new FileReader();\n    reader.onload = (evt) => {\n      const data = evt.target.result;\n      const workbook = XLSX.read(data, { type: \"binary\" });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, { defval: \"\" });\n\n      const parsedUnits = jsonData.map((row) => ({\n        unitId: row[\"Unit ID\"] || \"\",\n        typology: row[\"Typology\"] || \"\",\n        netArea: row[\"Net Area\"] || \"\",\n        grossArea: row[\"Gross Area\"] || \"\",\n        floorNumber: row[\"Floor Number\"] || \"\",\n        blockName: row[\"Block Name\"] || \"\",\n        totalBuildingGrossArea: row[\"Total Building Gross Area\"] || \"\",\n      }));\n\n      setUnits(parsedUnits);\n      setMessage(`Loaded ${parsedUnits.length} units from Excel file.`);\n      setError(\"\");\n    };\n\n    reader.readAsBinaryString(file);\n  };\n\n  const handleUnitChange = (index, event) => {\n    const { name, value } = event.target;\n    const newUnits = [...units];\n    newUnits[index][name] = value;\n\n    // Auto-fill totalBuildingGrossArea if it's the first unit in a new block\n    if (\n      name === \"blockName\" &&\n      value &&\n      !newUnits[index].totalBuildingGrossArea\n    ) {\n      const existingBlockUnits = newUnits.filter(\n        (u, i) => i !== index && u.blockName === value\n      );\n      if (existingBlockUnits.length > 0) {\n        newUnits[index].totalBuildingGrossArea =\n          existingBlockUnits[0].totalBuildingGrossArea;\n      }\n    }\n    setUnits(newUnits);\n  };\n\n  const addUnit = () => {\n    const lastUnit = units[units.length - 1];\n    const newUnit = {\n      unitId: \"\",\n      typology: \"\",\n      netArea: \"\",\n      grossArea: \"\",\n      floorNumber: \"\",\n      blockName: lastUnit ? lastUnit.blockName : \"\",\n      totalBuildingGrossArea: lastUnit ? lastUnit.totalBuildingGrossArea : \"\",\n    };\n    setUnits([...units, newUnit]);\n  };\n\n  const removeUnit = (index) => {\n    const newUnits = units.filter((_, i) => i !== index);\n    setUnits(newUnits);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setMessage(\"\");\n    setError(\"\");\n    setLoading(true);\n\n    try {\n      // Basic client-side validation for empty fields\n      for (const unit of units) {\n        for (const key in unit) {\n          if (!unit[key]) {\n            setError(\n              `Please fill all fields for Unit ID: ${\n                unit.unitId || \"New Unit\"\n              }.`\n            );\n            setLoading(false);\n            return;\n          }\n        }\n      }\n\n      // Convert area and floor numbers to numbers, and ensure allocated: false\n      const unitsToSend = units.map((unit) => ({\n        ...unit,\n        netArea: parseFloat(unit.netArea),\n        grossArea: parseFloat(unit.grossArea),\n        floorNumber: parseInt(unit.floorNumber, 10),\n        totalBuildingGrossArea: parseFloat(unit.totalBuildingGrossArea),\n        allocated: false,\n      }));\n\n      const response = await submitUnits(unitsToSend);\n      setMessage(response.message);\n      setError(\"\");\n      setUnits([\n        {\n          unitId: \"\",\n          typology: \"\",\n          netArea: \"\",\n          grossArea: \"\",\n          floorNumber: \"\",\n          blockName: \"\",\n          totalBuildingGrossArea: \"\",\n        },\n      ]); // Clear form\n    } catch (err) {\n      setError(err.message || \"An unexpected error occurred.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container-card\">\n      <h2>Developer Unit Submission</h2>\n      {message && <p className=\"message-success\">{message}</p>}\n      {error && <p className=\"message-error\">{error}</p>}\n      {loading && <p className=\"tip\">Submitting units...</p>}\n\n      {/* Upload card */}\n      <div className=\"upload-card\">\n        <div className=\"upload-info\">\n          <div className=\"upload-title\">Batch Upload (Excel)</div>\n          <div className=\"upload-subtitle\">\n            Use the template headers: Unit ID, Typology, Net Area, Gross Area,\n            Floor Number, Block Name, Total Building Gross Area\n          </div>\n        </div>\n        <div className=\"upload-actions\">\n          <label className=\"btn btn-secondary\">\n            <input\n              type=\"file\"\n              accept=\".xlsx, .xls\"\n              onChange={handleExcelUpload}\n              disabled={loading}\n              style={{ display: \"none\" }}\n            />\n            <span className=\"btn-icon\">📤</span> Import File\n          </label>\n        </div>\n      </div>\n      {selectedFileName && (\n        <div className=\"tip\">Selected: {selectedFileName}</div>\n      )}\n\n      <form onSubmit={handleSubmit}>\n        {units.map((unit, index) => (\n          <div key={index} className=\"unit-card\">\n            <h3>Unit {index + 1}</h3>\n            <div className=\"form-grid\">\n              <div className=\"form-field\">\n                <label>Unit ID</label>\n                <input\n                  type=\"text\"\n                  name=\"unitId\"\n                  value={unit.unitId}\n                  onChange={(e) => handleUnitChange(index, e)}\n                  required\n                />\n              </div>\n              <div className=\"form-field\">\n                <label>Typology</label>\n                <select\n                  name=\"typology\"\n                  value={unit.typology}\n                  onChange={(e) => handleUnitChange(index, e)}\n                  required\n                >\n                  <option value=\"\">Select Typology</option>\n                  {unitTypologies.map((type) => (\n                    <option key={type} value={type}>\n                      {type}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-field\">\n                <label>Net Area (sqm)</label>\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  name=\"netArea\"\n                  value={unit.netArea}\n                  onChange={(e) => handleUnitChange(index, e)}\n                  required\n                />\n              </div>\n              <div className=\"form-field\">\n                <label>Gross Area (sqm)</label>\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  name=\"grossArea\"\n                  value={unit.grossArea}\n                  onChange={(e) => handleUnitChange(index, e)}\n                  required\n                />\n              </div>\n              <div className=\"form-field\">\n                <label>Floor Number</label>\n                <input\n                  type=\"number\"\n                  name=\"floorNumber\"\n                  value={unit.floorNumber}\n                  onChange={(e) => handleUnitChange(index, e)}\n                  required\n                />\n              </div>\n              <div className=\"form-field\">\n                <label>Block/Building Name</label>\n                <input\n                  type=\"text\"\n                  name=\"blockName\"\n                  value={unit.blockName}\n                  onChange={(e) => handleUnitChange(index, e)}\n                  required\n                />\n              </div>\n              <div className=\"form-field\" style={{ gridColumn: \"span 2\" }}>\n                <label>Total Gross Area of Building (for this block)</label>\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  name=\"totalBuildingGrossArea\"\n                  value={unit.totalBuildingGrossArea}\n                  onChange={(e) => handleUnitChange(index, e)}\n                  required\n                />\n              </div>\n            </div>\n            {units.length > 1 && (\n              <button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                onClick={() => removeUnit(index)}\n              >\n                <span className=\"btn-icon\">🗑️</span> Remove Unit\n              </button>\n            )}\n          </div>\n        ))}\n\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            gap: 12,\n            marginTop: 12,\n          }}\n        >\n          <button\n            type=\"button\"\n            className=\"btn btn-outline\"\n            onClick={addUnit}\n            disabled={loading}\n          >\n            <span className=\"btn-icon\">➕</span> Add Another Unit\n          </button>\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\n            <span className=\"btn-icon\">📩</span> Submit All Units\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default DeveloperSubmissionForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}