{"ast":null,"code":"// frontend/src/services/allocationService.js\nconst API_BASE_URL = \"http://localhost:5000/api/allocation\";\nconst authHeader = () => {\n  const token = localStorage.getItem(\"token\");\n  return token ? {\n    Authorization: `Bearer ${token}`\n  } : {};\n};\nexport async function runAllocation(distributionMethod) {\n  if (!distributionMethod) {\n    throw new Error(\"Distribution method must be provided\");\n  }\n  try {\n    const response = await fetch(`${API_BASE_URL}/run`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...authHeader()\n      },\n      body: JSON.stringify({\n        distributionMethod\n      }) // <-- key must be distributionMethod\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(`Allocation request failed (${response.status}): ${errorData.message || JSON.stringify(errorData)}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error running allocation:\", error);\n    throw error;\n  }\n}\nexport async function getAllocatedUnits() {\n  const res = await fetch(`${API_BASE_URL}/allocated`, {\n    headers: {\n      ...authHeader()\n    }\n  });\n  if (!res.ok) {\n    const err = await res.text();\n    throw new Error(`Failed to fetch allocated units: ${err}`);\n  }\n  return res.json();\n}","map":{"version":3,"names":["API_BASE_URL","authHeader","token","localStorage","getItem","Authorization","runAllocation","distributionMethod","Error","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","status","message","error","console","getAllocatedUnits","res","err","text"],"sources":["/home/minale/trial/aahdc-lottery-platform-v1/frontend/src/services/allocationService.js"],"sourcesContent":["// frontend/src/services/allocationService.js\nconst API_BASE_URL = \"http://localhost:5000/api/allocation\";\nconst authHeader = () => {\n  const token = localStorage.getItem(\"token\");\n  return token ? { Authorization: `Bearer ${token}` } : {};\n};\n\nexport async function runAllocation(distributionMethod) {\n  if (!distributionMethod) {\n    throw new Error(\"Distribution method must be provided\");\n  }\n\n  try {\n    const response = await fetch(`${API_BASE_URL}/run`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...authHeader(),\n      },\n      body: JSON.stringify({ distributionMethod }), // <-- key must be distributionMethod\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(\n        `Allocation request failed (${response.status}): ${\n          errorData.message || JSON.stringify(errorData)\n        }`\n      );\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error running allocation:\", error);\n    throw error;\n  }\n}\n\nexport async function getAllocatedUnits() {\n  const res = await fetch(`${API_BASE_URL}/allocated`, {\n    headers: { ...authHeader() },\n  });\n  if (!res.ok) {\n    const err = await res.text();\n    throw new Error(`Failed to fetch allocated units: ${err}`);\n  }\n  return res.json();\n}\n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,sCAAsC;AAC3D,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAOF,KAAK,GAAG;IAAEG,aAAa,EAAE,UAAUH,KAAK;EAAG,CAAC,GAAG,CAAC,CAAC;AAC1D,CAAC;AAED,OAAO,eAAeI,aAAaA,CAACC,kBAAkB,EAAE;EACtD,IAAI,CAACA,kBAAkB,EAAE;IACvB,MAAM,IAAIC,KAAK,CAAC,sCAAsC,CAAC;EACzD;EAEA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,YAAY,MAAM,EAAE;MAClDW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,GAAGX,UAAU,CAAC;MAChB,CAAC;MACDY,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER;MAAmB,CAAC,CAAC,CAAE;IAChD,CAAC,CAAC;IAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIV,KAAK,CACb,8BAA8BC,QAAQ,CAACU,MAAM,MAC3CF,SAAS,CAACG,OAAO,IAAIN,IAAI,CAACC,SAAS,CAACE,SAAS,CAAC,EAElD,CAAC;IACH;IAEA,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF;AAEA,OAAO,eAAeE,iBAAiBA,CAAA,EAAG;EACxC,MAAMC,GAAG,GAAG,MAAMd,KAAK,CAAC,GAAGV,YAAY,YAAY,EAAE;IACnDY,OAAO,EAAE;MAAE,GAAGX,UAAU,CAAC;IAAE;EAC7B,CAAC,CAAC;EACF,IAAI,CAACuB,GAAG,CAACR,EAAE,EAAE;IACX,MAAMS,GAAG,GAAG,MAAMD,GAAG,CAACE,IAAI,CAAC,CAAC;IAC5B,MAAM,IAAIlB,KAAK,CAAC,oCAAoCiB,GAAG,EAAE,CAAC;EAC5D;EACA,OAAOD,GAAG,CAACN,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}