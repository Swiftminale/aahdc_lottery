{"ast":null,"code":"var _jsxFileName = \"/home/minale/trial/aahdc-lottery-platform-v1/frontend/src/components/DeveloperSubmissionForm.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/DeveloperSubmissionForm.js\nimport React, { useState } from \"react\";\nimport { submitUnits } from \"../services/unitService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst unitTypologies = [\"Studio\", \"1BR\", \"2BR\", \"3BR\", \"Shop\"];\nfunction DeveloperSubmissionForm() {\n  _s();\n  const [units, setUnits] = useState([{\n    unitId: \"\",\n    typology: \"\",\n    netArea: \"\",\n    grossArea: \"\",\n    floorNumber: \"\",\n    blockName: \"\",\n    totalBuildingGrossArea: \"\"\n  }, fv]);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleUnitChange = (index, event) => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newUnits = [...units];\n    newUnits[index][name] = value;\n\n    // Auto-fill totalBuildingGrossArea if it's the first unit in a new block\n    if (name === \"blockName\" && value && !newUnits[index].totalBuildingGrossArea) {\n      const existingBlockUnits = newUnits.filter((u, i) => i !== index && u.blockName === value);\n      if (existingBlockUnits.length > 0) {\n        newUnits[index].totalBuildingGrossArea = existingBlockUnits[0].totalBuildingGrossArea;\n      }\n    }\n    setUnits(newUnits);\n  };\n  const addUnit = () => {\n    // Pre-fill blockName and totalBuildingGrossArea from the last unit if available\n    const lastUnit = units[units.length - 1];\n    const newUnit = {\n      unitId: \"\",\n      typology: \"\",\n      netArea: \"\",\n      grossArea: \"\",\n      floorNumber: \"\",\n      blockName: lastUnit ? lastUnit.blockName : \"\",\n      totalBuildingGrossArea: lastUnit ? lastUnit.totalBuildingGrossArea : \"\"\n    };\n    setUnits([...units, newUnit]);\n  };\n  const removeUnit = index => {\n    const newUnits = units.filter((_, i) => i !== index);\n    setUnits(newUnits);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setMessage(\"\");\n    setError(\"\");\n    setLoading(true);\n    try {\n      // Basic client-side validation for empty fields\n      for (const unit of units) {\n        for (const key in unit) {\n          if (!unit[key]) {\n            setError(`Please fill all fields for Unit ID: ${unit.unitId || \"New Unit\"}.`);\n            setLoading(false);\n            return;\n          }\n        }\n      }\n\n      // Convert area and floor numbers to numbers\n      const unitsToSend = units.map(unit => ({\n        ...unit,\n        netArea: parseFloat(unit.netArea),\n        grossArea: parseFloat(unit.grossArea),\n        floorNumber: parseInt(unit.floorNumber, 10),\n        totalBuildingGrossArea: parseFloat(unit.totalBuildingGrossArea)\n      }));\n      const response = await submitUnits(unitsToSend);\n      setMessage(response.message);\n      setUnits([{\n        unitId: \"\",\n        typology: \"\",\n        netArea: \"\",\n        grossArea: \"\",\n        floorNumber: \"\",\n        blockName: \"\",\n        totalBuildingGrossArea: \"\"\n      }]); // Clear form\n    } catch (err) {\n      setError(err.message || \"An unexpected error occurred.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Developer Unit Submission\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message-success\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Submitting units...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [units.map((unit, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #e0e0e0\",\n          padding: \"20px\",\n          marginBottom: \"20px\",\n          borderRadius: \"10px\",\n          backgroundColor: \"#fdfdfd\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: \"0\",\n            marginBottom: \"15px\",\n            color: \"#34495e\"\n          },\n          children: [\"Unit \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\n            gap: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Unit ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"unitId\",\n              value: unit.unitId,\n              onChange: e => handleUnitChange(index, e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Typology:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"typology\",\n              value: unit.typology,\n              onChange: e => handleUnitChange(index, e),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Typology\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), unitTypologies.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: type,\n                children: type\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Net Area (sqm):\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              name: \"netArea\",\n              value: unit.netArea,\n              onChange: e => handleUnitChange(index, e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Gross Area (sqm):\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              name: \"grossArea\",\n              value: unit.grossArea,\n              onChange: e => handleUnitChange(index, e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Floor Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"floorNumber\",\n              value: unit.floorNumber,\n              onChange: e => handleUnitChange(index, e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Block/Building Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"blockName\",\n              value: unit.blockName,\n              onChange: e => handleUnitChange(index, e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              gridColumn: \"span 2\"\n            },\n            children: [\"Total Gross Area of Building (for this block):\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              name: \"totalBuildingGrossArea\",\n              value: unit.totalBuildingGrossArea,\n              onChange: e => handleUnitChange(index, e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), units.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => removeUnit(index),\n          style: {\n            backgroundColor: \"#dc3545\",\n            marginTop: \"15px\"\n          },\n          children: \"Remove Unit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          gap: \"15px\",\n          marginTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addUnit,\n          children: \"Add Another Unit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: \"Submit All Units\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(DeveloperSubmissionForm, \"My92nAHwRjPwJktKmsa3bNSVIDg=\");\n_c = DeveloperSubmissionForm;\nexport default DeveloperSubmissionForm;\nvar _c;\n$RefreshReg$(_c, \"DeveloperSubmissionForm\");","map":{"version":3,"names":["React","useState","submitUnits","jsxDEV","_jsxDEV","unitTypologies","DeveloperSubmissionForm","_s","units","setUnits","unitId","typology","netArea","grossArea","floorNumber","blockName","totalBuildingGrossArea","fv","message","setMessage","error","setError","loading","setLoading","handleUnitChange","index","event","name","value","target","newUnits","existingBlockUnits","filter","u","i","length","addUnit","lastUnit","newUnit","removeUnit","_","handleSubmit","preventDefault","unit","key","unitsToSend","map","parseFloat","parseInt","response","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","border","padding","marginBottom","borderRadius","backgroundColor","marginTop","color","display","gridTemplateColumns","gap","type","onChange","e","required","step","gridColumn","onClick","justifyContent","disabled","_c","$RefreshReg$"],"sources":["/home/minale/trial/aahdc-lottery-platform-v1/frontend/src/components/DeveloperSubmissionForm.js"],"sourcesContent":["// frontend/src/components/DeveloperSubmissionForm.js\nimport React, { useState } from \"react\";\nimport { submitUnits } from \"../services/unitService\";\n\nconst unitTypologies = [\"Studio\", \"1BR\", \"2BR\", \"3BR\", \"Shop\"];\n\nfunction DeveloperSubmissionForm() {\n  const [units, setUnits] = useState([\n    {\n      unitId: \"\",\n      typology: \"\",\n      netArea: \"\",\n      grossArea: \"\",\n      floorNumber: \"\",\n      blockName: \"\",\n      totalBuildingGrossArea: \"\",\n    },fv\n  ]);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleUnitChange = (index, event) => {\n    const { name, value } = event.target;\n    const newUnits = [...units];\n    newUnits[index][name] = value;\n\n    // Auto-fill totalBuildingGrossArea if it's the first unit in a new block\n    if (\n      name === \"blockName\" &&\n      value &&\n      !newUnits[index].totalBuildingGrossArea\n    ) {\n      const existingBlockUnits = newUnits.filter(\n        (u, i) => i !== index && u.blockName === value\n      );\n      if (existingBlockUnits.length > 0) {\n        newUnits[index].totalBuildingGrossArea =\n          existingBlockUnits[0].totalBuildingGrossArea;\n      }\n    }\n    setUnits(newUnits);\n  };\n\n  const addUnit = () => {\n    // Pre-fill blockName and totalBuildingGrossArea from the last unit if available\n    const lastUnit = units[units.length - 1];\n    const newUnit = {\n      unitId: \"\",\n      typology: \"\",\n      netArea: \"\",\n      grossArea: \"\",\n      floorNumber: \"\",\n      blockName: lastUnit ? lastUnit.blockName : \"\",\n      totalBuildingGrossArea: lastUnit ? lastUnit.totalBuildingGrossArea : \"\",\n    };\n    setUnits([...units, newUnit]);\n  };\n\n  const removeUnit = (index) => {\n    const newUnits = units.filter((_, i) => i !== index);\n    setUnits(newUnits);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setMessage(\"\");\n    setError(\"\");\n    setLoading(true);\n\n    try {\n      // Basic client-side validation for empty fields\n      for (const unit of units) {\n        for (const key in unit) {\n          if (!unit[key]) {\n            setError(\n              `Please fill all fields for Unit ID: ${\n                unit.unitId || \"New Unit\"\n              }.`\n            );\n            setLoading(false);\n            return;\n          }\n        }\n      }\n\n      // Convert area and floor numbers to numbers\n      const unitsToSend = units.map((unit) => ({\n        ...unit,\n        netArea: parseFloat(unit.netArea),\n        grossArea: parseFloat(unit.grossArea),\n        floorNumber: parseInt(unit.floorNumber, 10),\n        totalBuildingGrossArea: parseFloat(unit.totalBuildingGrossArea),\n      }));\n\n      const response = await submitUnits(unitsToSend);\n      setMessage(response.message);\n      setUnits([\n        {\n          unitId: \"\",\n          typology: \"\",\n          netArea: \"\",\n          grossArea: \"\",\n          floorNumber: \"\",\n          blockName: \"\",\n          totalBuildingGrossArea: \"\",\n        },\n      ]); // Clear form\n    } catch (err) {\n      setError(err.message || \"An unexpected error occurred.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container-card\">\n      <h2>Developer Unit Submission</h2>\n      {message && <p className=\"message-success\">{message}</p>}\n      {error && <p className=\"message-error\">{error}</p>}\n      {loading && <p>Submitting units...</p>}\n\n      <form onSubmit={handleSubmit}>\n        {units.map((unit, index) => (\n          <div\n            key={index}\n            style={{\n              border: \"1px solid #e0e0e0\",\n              padding: \"20px\",\n              marginBottom: \"20px\",\n              borderRadius: \"10px\",\n              backgroundColor: \"#fdfdfd\",\n            }}\n          >\n            <h3\n              style={{ marginTop: \"0\", marginBottom: \"15px\", color: \"#34495e\" }}\n            >\n              Unit {index + 1}\n            </h3>\n            <div\n              style={{\n                display: \"grid\",\n                gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\n                gap: \"15px\",\n              }}\n            >\n              <label>\n                Unit ID:\n                <input\n                  type=\"text\"\n                  name=\"unitId\"\n                  value={unit.unitId}\n                  onChange={(e) => handleUnitChange(index, e)}\n                  required\n                />\n              </label>\n              <label>\n                Typology:\n                <select\n                  name=\"typology\"\n                  value={unit.typology}\n                  onChange={(e) => handleUnitChange(index, e)}\n                  required\n                >\n                  <option value=\"\">Select Typology</option>\n                  {unitTypologies.map((type) => (\n                    <option key={type} value={type}>\n                      {type}\n                    </option>\n                  ))}\n                </select>\n              </label>\n              <label>\n                Net Area (sqm):\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  name=\"netArea\"\n                  value={unit.netArea}\n                  onChange={(e) => handleUnitChange(index, e)}\n                  required\n                />\n              </label>\n              <label>\n                Gross Area (sqm):\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  name=\"grossArea\"\n                  value={unit.grossArea}\n                  onChange={(e) => handleUnitChange(index, e)}\n                  required\n                />\n              </label>\n              <label>\n                Floor Number:\n                <input\n                  type=\"number\"\n                  name=\"floorNumber\"\n                  value={unit.floorNumber}\n                  onChange={(e) => handleUnitChange(index, e)}\n                  required\n                />\n              </label>\n              <label>\n                Block/Building Name:\n                <input\n                  type=\"text\"\n                  name=\"blockName\"\n                  value={unit.blockName}\n                  onChange={(e) => handleUnitChange(index, e)}\n                  required\n                />\n              </label>\n              <label style={{ gridColumn: \"span 2\" }}>\n                Total Gross Area of Building (for this block):\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  name=\"totalBuildingGrossArea\"\n                  value={unit.totalBuildingGrossArea}\n                  onChange={(e) => handleUnitChange(index, e)}\n                  required\n                />\n              </label>\n            </div>\n            {units.length > 1 && (\n              <button\n                type=\"button\"\n                onClick={() => removeUnit(index)}\n                style={{ backgroundColor: \"#dc3545\", marginTop: \"15px\" }}\n              >\n                Remove Unit\n              </button>\n            )}\n          </div>\n        ))}\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            gap: \"15px\",\n            marginTop: \"20px\",\n          }}\n        >\n          <button type=\"button\" onClick={addUnit}>\n            Add Another Unit\n          </button>\n          <button type=\"submit\" disabled={loading}>\n            Submit All Units\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default DeveloperSubmissionForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}