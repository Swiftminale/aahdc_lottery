{"ast":null,"code":"// frontend/src/services/reportService.js\nconst API_URL = \"http://localhost:5000/api/reports\"; // Ensure this matches your backend port\n\nexport const downloadExcelReport = async () => {\n  try {\n    const response = await fetch(`${API_URL}/excel`);\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || \"Failed to download Excel report\");\n    }\n    // Create a Blob from the response and trigger download\n    const blob = await response.blob();\n    const url = window.URL.createObjectURL(new Blob([blob]));\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", \"allocation_report.xlsx\");\n    document.body.appendChild(link);\n    link.click();\n    link.parentNode.removeChild(link);\n  } catch (error) {\n    console.error(\"Error downloading Excel report:\", error);\n    throw error;\n  }\n};\nexport const downloadPdfReport = async () => {\n  try {\n    const response = await fetch(`${API_URL}/pdf`);\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || \"Failed to download PDF report\");\n    }\n    const blob = await response.blob();\n    const url = window.URL.createObjectURL(new Blob([blob]));\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", \"allocation_report.pdf\");\n    document.body.appendChild(link);\n    link.click();\n    link.parentNode.removeChild(link);\n  } catch (error) {\n    console.error(\"Error downloading PDF report:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_URL","downloadExcelReport","response","fetch","ok","errorData","json","Error","message","blob","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","parentNode","removeChild","error","console","downloadPdfReport"],"sources":["/home/minale/trial/aahdc-lottery-platform-v1/frontend/src/services/reportService.js"],"sourcesContent":["// frontend/src/services/reportService.js\nconst API_URL = \"http://localhost:5000/api/reports\"; // Ensure this matches your backend port\n\nexport const downloadExcelReport = async () => {\n  try {\n    const response = await fetch(`${API_URL}/excel`);\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || \"Failed to download Excel report\");\n    }\n    // Create a Blob from the response and trigger download\n    const blob = await response.blob();\n    const url = window.URL.createObjectURL(new Blob([blob]));\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", \"allocation_report.xlsx\");\n    document.body.appendChild(link);\n    link.click();\n    link.parentNode.removeChild(link);\n  } catch (error) {\n    console.error(\"Error downloading Excel report:\", error);\n    throw error;\n  }\n};\n\nexport const downloadPdfReport = async () => {\n  try {\n    const response = await fetch(`${API_URL}/pdf`);\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || \"Failed to download PDF report\");\n    }\n    const blob = await response.blob();\n    const url = window.URL.createObjectURL(new Blob([blob]));\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", \"allocation_report.pdf\");\n    document.body.appendChild(link);\n    link.click();\n    link.parentNode.removeChild(link);\n  } catch (error) {\n    console.error(\"Error downloading PDF report:\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,mCAAmC,CAAC,CAAC;;AAErD,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,QAAQ,CAAC;IAChD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,iCAAiC,CAAC;IACzE;IACA;IACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClC,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACL,IAAI,CAAC,CAAC,CAAC;IACxD,MAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGR,GAAG;IACfK,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,wBAAwB,CAAC;IACvDH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;IAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;IACZP,IAAI,CAACQ,UAAU,CAACC,WAAW,CAACT,IAAI,CAAC;EACnC,CAAC,CAAC,OAAOU,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACF,MAAMzB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,MAAM,CAAC;IAC9C,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,+BAA+B,CAAC;IACvE;IACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClC,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACL,IAAI,CAAC,CAAC,CAAC;IACxD,MAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGR,GAAG;IACfK,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,uBAAuB,CAAC;IACtDH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;IAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;IACZP,IAAI,CAACQ,UAAU,CAACC,WAAW,CAACT,IAAI,CAAC;EACnC,CAAC,CAAC,OAAOU,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}